{
  "openapi": "3.0.1",
  "info": {
    "title": "Entropi API",
    "description": "A guide to Entropi's public APIs",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://dev.entropi.app"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/v1/products/getOne": {
      "get": {
        "description": "Returns a single product by productID",
        "parameters": [
          {
            "name": "productID",
            "in": "query",
            "description": "The productID to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/getList": {
      "get": {
        "description": "Returns a list of all products under a given user and/or organization",
        "parameters": [
          {
            "required": true,
            "name": "userID",
            "in": "query",
            "description": "Retrieve products associated with this userID ",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "name": "orgID",
            "in": "query",
            "description": "Retrieve products associated with this orgID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array",
                      "description": "Array of JSON objects with product details matching query",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/addOne": {
      "post": {
        "description": "Creates a new product under a given user and/or organization",
        "requestBody": {
          "required": true,
          "description": "JSON representation of your product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "properties": {
                        "productID": {
                          "description": "Created product's productID",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/updateOne": {
      "post": {
        "description": "Updates a product by productID",
        "requestBody": {
          "required": true,
          "description": "JSON representation of your product with updated fields",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "properties": {
                        "productID": {
                          "type": "string",
                          "description": "productID of item that was updated"
                        },
                        "status": {
                          "type": "string",
                          "description": "Outcome of the operation"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/interviews/getOne": {
      "get": {
        "description": "Returns a single interview by interviewID",
        "parameters": [
          {
            "name": "interviewID",
            "in": "query",
            "description": "The interviewID to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/Interview"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/interviews/getList": {
      "get": {
        "description": "Returns a list of all interviews under a given product",
        "parameters": [
          {
            "required": true,
            "name": "productID",
            "in": "query",
            "description": "Retrieve interviews associated with this productID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Interview List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array",
                      "description": "Array of JSON objects with interview details matching query",
                      "items": {
                        "$ref": "#/components/schemas/Interview"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/interviews/addOne": {
      "post": {
        "description": "Creates a new product under a given user and/or organization",
        "requestBody": {
          "required": true,
          "description": "JSON representation of your product",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewInterview"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "properties": {
                        "interviewID": {
                          "description": "Created interview's interviewID",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/interviews/updateOne": {
      "post": {
        "description": "Updates an Interview by interviewID",
        "requestBody": {
          "required": true,
          "description": "JSON representation of the Interview with updated fields",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interview"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "properties": {
                        "interviewID": {
                          "type": "string",
                          "description": "interviewID of item that was updated"
                        },
                        "status": {
                          "type": "string",
                          "description": "Outcome of the operation"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invites/getList": {
      "get": {
        "description": "Returns a list of all Invites for a given Interview or Product. ",
        "parameters": [
          {
            "name": "interviewID",
            "in": "query",
            "description": "Retrieve invites associated with this interviewID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productID",
            "in": "query",
            "description": "Retrieve invites associated with this productID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invite List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array",
                      "description": "Array of JSON objects with invite details matching query",
                      "items": {
                        "$ref": "#/components/schemas/Invite"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invites/getOne": {
      "get": {
        "description": "Returns a single invite by linkID",
        "parameters": [
          {
            "name": "linkID",
            "in": "query",
            "description": "The linkID to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/Invite"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invites/createInvites": {
      "get": {
        "description": "Returns a list of N invite links to interviews",
        "parameters": [
          {
            "required": true,
            "name": "nInvites",
            "in": "query",
            "description": "Number of invites to generate",
            "schema": {
              "type": "integer"
            }
          },
          {
            "required": true,
            "name": "interviewID",
            "in": "query",
            "description": "ID of the interview associated with the invite",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "name": "productID",
            "in": "query",
            "description": "ID of the product associated with the invite",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "name": "orgID",
            "in": "query",
            "description": "ID of the Organization creating the invite",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invite List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array",
                      "description": "Array of N invite URLs",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profiles/getList": {
      "get": {
        "description": "Returns a list of all profiles under a given product",
        "parameters": [
          {
            "required": true,
            "name": "productID",
            "in": "query",
            "description": "Retrieve profiles associated with this productID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array",
                      "description": "Array of JSON objects with profile details matching query",
                      "items": {
                        "$ref": "#/components/schemas/Profile"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profiles/getOne": {
      "get": {
        "description": "Returns a single profile by profileID",
        "parameters": [
          {
            "name": "profileID",
            "in": "query",
            "description": "The profileID to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/Profile"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "required": [
          "name",
          "desc",
          "orgID",
          "userID",
          "productID"
        ],
        "type": "object",
        "properties": {
          "productID": {
            "description": "Product ID",
            "type": "string"
          },
          "name": {
            "description": "Name of the product",
            "type": "string"
          },
          "desc": {
            "description": "A detailed description of the product",
            "type": "string"
          },
          "url": {
            "description": "URL to product page, if applicable",
            "type": "string"
          },
          "orgID": {
            "description": "Organization ID. See Organizations endpoint for details",
            "type": "string"
          },
          "userID": {
            "description": "User ID. See Users endpoint for details",
            "type": "string"
          },
          "imageLink": {
            "description": "URL to an image of the product",
            "type": "string"
          }
        }
      },
      "NewProduct": {
        "required": [
          "name",
          "desc",
          "orgID",
          "userID"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the product",
            "type": "string"
          },
          "desc": {
            "description": "A detailed description of the product",
            "type": "string"
          },
          "url": {
            "description": "URL to product page, if applicable",
            "type": "string"
          },
          "orgID": {
            "description": "Organization ID. See Organizations endpoint for details",
            "type": "string"
          },
          "userID": {
            "description": "User ID. See Users endpoint for details",
            "type": "string"
          },
          "imageLink": {
            "description": "URL to an image of the product",
            "type": "string"
          }
        }
      },
      "Interview": {
        "type": "object",
        "required": [
          "productID",
          "interviewName",
          "guidelines",
          "interviewID"
        ],
        "properties": {
          "interviewID": {
            "type": "string",
            "description": "Interview ID"
          },
          "productID": {
            "type": "string",
            "description": "ID of the Product the interview is about"
          },
          "userID": {
            "type": "string",
            "description": "userID associated with this interview"
          },
          "interviewName": {
            "type": "string",
            "description": "A name for the interview"
          },
          "guidelines": {
            "type": "string",
            "description": "Interview guidelines, including any insights you hope to extract, specific questiosn you'd like to ask, etc."
          },
          "interviewer": {
            "type": "string",
            "description": "ID associated with the Interviewer Agent assigned to this interview. Defaults to Eve from Entropi"
          }
        }
      },
      "NewInterview": {
        "type": "object",
        "required": [
          "productID",
          "interviewName",
          "guidelines"
        ],
        "properties": {
          "productID": {
            "type": "string",
            "description": "ID of the Product the interview is about"
          },
          "userID": {
            "type": "string",
            "description": "userID associated with this interview"
          },
          "interviewName": {
            "type": "string",
            "description": "A name for the interview"
          },
          "guidelines": {
            "type": "string",
            "description": "Interview guidelines, including any insights you hope to extract, specific questiosn you'd like to ask, etc."
          }
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "profileID": {
            "type": "string",
            "description": ""
          },
          "productIDs": {
            "type": "array",
            "description": "List of productIDs for which this Customer has participate in interviews",
            "items": {
              "type": "string"
            }
          },
          "firstName": {
            "type": "string",
            "description": "Customer's first name"
          },
          "lastName": {
            "type": "string",
            "description": "Customer's last name"
          },
          "metadata": {
            "type": "object",
            "description": "Metadata associated with this customer profile",
            "properties": {
              "source": {
                "type": "string",
                "description": "Source of the profile. Can be Human derived, or AI generated (Coming soon)"
              },
              "acquired_date": {
                "type": "string",
                "description": "Date customer profile was acquired"
              },
              "last_interviewed": {
                "type": "string",
                "description": "Date customer profile was last interviewed"
              },
              "interview_count": {
                "type": "integer",
                "description": "Number of interviews this customer has completed"
              },
              "sentiment": {
                "type": "integer",
                "description": "Numerical grade of the customer's sentiment towards the product on a scale from 1 - 5, with 5 representing utmost satisfaction"
              }
            }
          },
          "details": {
            "type": "object",
            "description": "Customer details including demographics, key values, etc.",
            "properties": {
              "occupation": {
                "type": "string",
                "description": "Customer's occupation, sourced from interview onboarding steps"
              },
              "location": {
                "type": "string",
                "description": "Customer's location - Ex: Los Angeles, CA, USA"
              },
              "background": {
                "type": "string",
                "description": "Background information about the customer"
              },
              "productAlignment": {
                "type": "string",
                "description": "The customer's alignment and core feedback on the product"
              },
              "key_values": {
                "type": "array",
                "description": "List of key values the customer looks for in similar products",
                "items": {
                  "type": "string"
                }
              },
              "interests": {
                "type": "array",
                "description": "List of customer's interests, revealed by their responses",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "history": {
            "type": "array",
            "description": "List of past interviews/simulations this customer profile has participated in",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Participation method - link or simulation (coming soon)"
                },
                "id": {
                  "type": "string",
                  "description": "ID of Invite or simulation"
                }
              }
            }
          }
        }
      },
      "Invite": {
        "type": "object",
        "properties": {
          "linkID": {
            "type": "string",
            "description": "ID of the Invite"
          },
          "interviewID": {
            "type": "string",
            "description": "ID of the interview associated with the invite"
          },
          "productID": {
            "type": "string",
            "description": "ID of the product associated with the invite"
          },
          "orgID": {
            "type": "string",
            "description": "ID of the organization provisioning the invite"
          },
          "userInfo": {
            "type": "object",
            "description": "Respondent's details",
            "properties": {
              "email": {
                "type": "string",
                "description": "Customer's email"
              },
              "name": {
                "type": "string",
                "description": "Customer's full name"
              },
              "occupation": {
                "type": "string",
                "description": "Customer's occupation"
              }
            }
          },
          "status": {
            "type": "string",
            "description": "Status of the invite. unopened/opened/started/complete"
          },
          "timestamp": {
            "type": "string",
            "description": "DateTime string representation of when the invite was provisioned"
          },
          "completed_on": {
            "type": "string",
            "description": "Date string of when the interview was completed. Visible if status is completed"
          },
          "conversation": {
            "type": "array",
            "description": "Transcript of the entire interview",
            "items":{
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "description": "Message sender - assistant denotes the Interviewer Agent, user denotes the customer's response"
                },
                "content": {
                  "type": "string",
                  "description": "Message content"
                } 
              }
            }
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}